name: SAKILA PIPELINE
on:
  push:
    branches:
      - master
      - develop
  pull_request:
    types: [opened, synchronize, reopened]

env:
  AZURE_WEBAPP_NAME: app-sakila
  AZURE_RESOURCE_GROUP: rsg-sakila
  ACR_NAME: crsakila.azurecr.io
  IMAGE_TAG: ${{ github.sha }}    
  
jobs:

  CI:
    runs-on: ubuntu-latest  
    name: CI
    environment: DEV
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0  
      - name: Set up JDK 17
        uses: actions/setup-java@v1
        with:
          java-version: 17
      - name: SonarCloud packages
        uses: actions/cache@v1
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar
      - name: Maven packages
        uses: actions/cache@v1
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2
      - name: SonarCloud (Build and analyze)
        env:
          GITHUB_TOKEN: ${{ secrets.GT_TOKEN }}  
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: mvn -B verify org.sonarsource.scanner.maven:sonar-maven-plugin:sonar -Dsonar.projectKey=cjp4_sakila
      - name: Unit Test
        run: mvn test
      - name: Build Jar
        run: mvn clean install 

  CD:
    runs-on: ubuntu-latest
  
    name: CD
    #if: github.event.pull_request.base.ref == 'master'
    environment: PROD
    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Log in to Azure Container Registry
      uses: azure/docker-login@v1
      with:
        login-server: ${{ secrets.ACR_LOGIN_SERVER }}
        username: ${{ secrets.ACR_USERNAME }}
        password: ${{ secrets.ACR_PASSWORD }}
    
    - name: Azure Container Registry Build
      uses: Azure/acr-build@v1
      with:
        service_principal: ${{ secrets.ACR_USERNAME }}
        service_principal_password: ${{ secrets.ACR_PASSWORD }}
        tenant: fd064dbe-1600-4b1b-aa50-e7cccfcee918
        registry: crsakila
        repository: ${{ env.ACR_NAME }}/java-app
        git_access_token: ${{ secrets.GITHUB_TOKEN }}
        tag: ${{ env.IMAGE_TAG }}
        folder: ./
        dockerfile: ./Dockerfile
        
    - name: Set image tag based on date and time
      run: echo "::set-env name=IMAGE_TAG::$(date +%Y%m%d%H%M%S)"
    
    - name: Deploy to Azure Web App
      uses: azure/webapps-deploy@v2
      with:
        app-name: ${{ env.AZURE_WEBAPP_NAME }}
        resource-group: ${{ env.AZURE_RESOURCE_GROUP }}
        images: ${{ env.ACR_NAME }}/java-app:${{ env.IMAGE_TAG }} 

